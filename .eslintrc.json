{
  "root": true,
  "env": {
    "node": true,
    "es6": true,
    "browser": true
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true // Allows for the parsing of JSX
    }
  }, // to enable features such as async/await
  "ignorePatterns": ["node_modules/*", ".next/*", ".out/*", "!.prettierrc.js"], // We don't want to lint generated files nor node_modules, but we want to lint .prettierrc.js (ignored by default by eslint)
  "extends": ["eslint:recommended"],
  "overrides": [
    // This configuration will apply only to TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "settings": { "react": { "version": "detect" } },
      "env": {
        "browser": true,
        "node": true,
        "es6": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended", // TypeScript rules
        "plugin:react/recommended", // React rules
        "plugin:react-hooks/recommended", // React hooks rules
        "plugin:jsx-a11y/recommended", // Accessibility rules
        "plugin:prettier/recommended" // Prettier plugin,
      ],
      "rules": {
        "no-case-declarations": "off",

        // We will use TypeScript's types for component props instead
        "react/prop-types": "off",
        // No need to import React when using Next.js
        "react/react-in-jsx-scope": "off",
        "react/self-closing-comp": [
          "error",
          {
            "component": true,
            "html": true
          }
        ],
        "react/button-has-type": [
          "error",
          {
            "button": true,
            "submit": true,
            "reset": true
          }
        ],
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": "arrow-function",
            "unnamedComponents": "arrow-function"
          }
        ],
        "react/no-danger": "off",
        "react/jsx-wrap-multilines": [
          "error",
          {
            "declaration": "parens-new-line",
            "assignment": "parens-new-line",
            "return": "parens-new-line",
            "arrow": "parens-new-line",
            "condition": "parens-new-line",
            "logical": "parens-new-line"
          }
        ],
        "react/jsx-tag-spacing": [
          "error",
          {
            "closingSlash": "never",
            "beforeSelfClosing": "always",
            "afterOpening": "never",
            "beforeClosing": "allow"
          }
        ],
        "react/jsx-props-no-multi-spaces": ["error"],
        "react/jsx-no-useless-fragment": ["error"],
        "react/jsx-fragments": ["error"],
        "jsx-a11y/media-has-caption": "off",
        // This rule is not compatible with Next.js's <Link /> components
        "jsx-a11y/anchor-is-valid": "off",

        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-explicit-any": "off",

        // I suggest this setting for requiring return types on functions only where useful
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": true
          }
        ],

        "prettier/prettier": [
          "warn",
          {
            "endOfLine": "auto"
          },
          { "usePrettierrc": true }
        ] // Includes .prettierrc.js rules
      }
    }
  ]
}
